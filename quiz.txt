#   Why python?
    ans :   it is a general purpose programming language.It is used to build websites and software, automate tasks,
            and conduct data analysis.The syntax in Python when compared to C++ or Java, allows programmers to do coding in fewer steps.
            Bigger organizations use it widely because of its multiple programming paradigms.
            Python has automatic memory management and dynamic features with a comprehensive and large standard library.

#   modules, random, time modules,

1.  Basic : variables, typecasting, userinput, datatypes, comment.
            data types : string, boolean, int, float.
2.  math module : to perform complex mathematical operations.
3.  conditional statements : if, else, elif.
4.  logical operators : and, or, not.
                        and = checks two or more conditions are True
                        or = checks if at least one condition is True
                        not = True if condition is False, and vice versa
5.  Strings : immutable. String slicing, string method, string indexing, format specifier.
6.  Loops : while loop : to execute some code while some condition remains true.
            for loop : to execute a block of code a fixed number of times.
            You can iterate over a range, string, sequence, etc.
            nested loop : loop or loops within a loop.
7.  loop controls : break : to terminate the loop or statement
                    continue : to force execute the next iteration of the loop.
            `       The code inside the loop following the continue statement will be skipped and the next iteration of the loop will begin.
                    pass : to skip code.
***8.  Data structures : lists, sets, tuples, dictionary, list comprehension, dictionary comprehension.
                    List: Mutable (modifiable).
                    Tuple: Immutable (non-modifiable).
                    Set: Mutable, but elements inside must be immutable.
                    Dictionary: Mutable; keys are immutable, but values can change.
                    context : https://www.geeksforgeeks.org/differences-and-applications-of-list-tuple-set-and-dictionary-in-python/
9.  Keyword arguments : arguments prefixed with the names of parameters
                        order of the arguments doesn't matter
                        helps with readability
10. Args and kwargs : *args    = allows you to pass multiple non-key arguments
                      **kwargs = allows you to pass multiple keyword-arguments
13. Exception handling : events detected during execution that interrupt the flow of a program
14. If-else vs exception handling : if-else statements prevent the error from occurring by checking for the conditions (that may cause an error) in advance.
                                    Whereas try-except waits for an error to occur and handles it afterward.
*** 15. File : read, write, copy, move, delete. os module.
*** 16. Object-oriented programming :  variable scope, scope resolution, functions, return statement, nested function calls, class variables, inheritance,
                                   multilevel inheritance, multiple inheritance, method overriding, method chaining, Functions to variables, higher order functions
                                   Variable scope : where a variable is visible and accessible
                                   Scope resolution : local, enclosed, global, built-in. (LEGB rule followed when interpreting when resolving names in a program)
                                   super function, abstract classes, abstract methods, objects as arguments, duck typing
                                   super function : gives access to methods of a parent class. Returns a temporary object of the parent class when used.
                                   abstract class : a class which contains one or more abstract methods.
                                   abstract method : a method that has a declaration but does not have an implementation.
                                                     prevents a user from creating an object of that class
                                                     compels a user to override abstract methods in a child class
                                                     kind of like interface implementation in java. opposite of super function when you think about it.
                                   duck typing : concept where the class of an object is less important than the methods/attributes
                                                 class type is not checked if minimum methods/attributes are present.
                                   Functions to variables : assigns function to a variable. Is reusable.
                                   Higher order function : a function that either:
                                                        1. accepts a function as an argument
                                                        or
                                                        2. returns a function
                                                        (In python, functions are also treated as objects)

    Simplify : walrus operator, lamda.
                Walrus operator : assignment expression. Assigns values to variables as part of a larger expression.
                Lamda : function written in 1 line using lambda keyword
                        accepts any number of arguments, but only has one expression.
                        (think of it as a shortcut)
                        (useful if needed for a short period of time, throw-away)
                        lambda parameters:expression
***21. Data structure modification : map, sort, filter, reduce, zip function, list comprehension, dictionary comprehension.
                                  Map function : applies a function to each item in an iterable (list, tuple, etc.). map(function,iterable).
                                  filter :
                                  sort() method : used with lists
                                  sort() function : used with iterables
                                  reduce() : apply a function to an iterable and reduce it to a single cumulative value.
                                  performs function on first two elements and repeats process until 1 value remains
                                  list comprehension : List comprehension offers a shorter syntax when you want to create a new list based on the values of an existing list.
                                                     a way to create a new list with less syntax can mimic certain lambda functions, easier to read.
                                                     List comprehensions are often faster than loops because they use a more optimized internal mechanism for iterating over the collection.
                                                     Additionally, list comprehensions allow you to perform transformations and filtering in a single statement, which can lead to more efficient code.
                                  dictionary comprehension : can replace for loops and certain lambda functions
                                                             Dictionary comprehension is a method for transforming one dictionary into another dictionary. During this transformation,
                                                             items within the original dictionary can be conditionally included in the new dictionary, and each item can be transformed as needed.
                                  zip(*iterables) :  aggregate elements from two or more iterables (list, tuples, sets, etc.)
                                                    creates a zip object with paired elements stored in tuples for each element
                                                    The zip() function in Python is used to combine two or more iterable dictionaries into a single iterable,
                                                    where corresponding elements from the input iterable are paired together as tuples.
22. if __name__ == '__main__' : : Allows to Execute Code When the File Runs as a Script, but Not When It's Imported as a Module.
23. Threading : cpu bound, io bound, multiprocessing, multi threading, daemon thread.
                daemon thread : a background thread.
                multiprocessing : running tasks in parallel on different cpu cores, bypasses GIL used for threading
                                  better for cpu bound tasks (heavy cpu usage)
                multithreading : better for io bound tasks (waiting around)


# run .py file with cmd
# *****************************
# save file as .py (Python file)
# go to command prompt
# navigate to directory w/ your file: cd C:\Users\BroCode\Desktop
# invoke python interpreter + script: python hello_world.py
#       pip = package manager for packages and modules from Python Package Index
#
#       included for Python versions 3.4+
#       open command prompt
#
#       help:                                          pip
#       check:                                       pip --version
#       update:                                     pip install --upgrade pip
#       installed packages:                pip list
#       check outdated packages:    pip list --outdated
#       update a package:                  pip install "package name" --upgrade
#       install a package:                    pip install "package name"
(Windows Defender may prevent you from running)
(make sure pip and pyinstaller are installed/updated)

1. cd to directory that contains your .py file
2. pyinstaller ...
  -F   (all in 1 file)
  -w   (removes terminal window)
  -i icon.ico  (adds custom icon to .exe)
  clock.py  (name of your main python file)

3. exe is located in the dist folder


# The end.